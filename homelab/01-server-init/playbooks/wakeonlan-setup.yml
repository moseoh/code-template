---
- name: WakeOnLAN 설정
  hosts: homelab
  become: yes

  tasks:
    - name: net-tools 패키지 설치
      ansible.builtin.apt:
        name: net-tools
        state: present
        update_cache: yes

    - name: ethtool 설치
      ansible.builtin.apt:
        name: ethtool
        state: present

    - name: target_ip에 해당하는 네트워크 인터페이스 찾기
      ansible.builtin.shell: |
        ifconfig | grep -B 1 "{{ target_ip }}" | head -1 | awk '{print $1}' | sed 's/:$//'
      register: target_interface_result
      changed_when: false
      failed_when: target_interface_result.stdout == ""

    - name: 찾은 네트워크 인터페이스 확인
      ansible.builtin.debug:
        msg: "Target IP {{ target_ip }}가 설정된 인터페이스: {{ target_interface_result.stdout }}"

    - name: 인터페이스 변수 설정
      ansible.builtin.set_fact:
        target_interface: "{{ target_interface_result.stdout }}"

    - name: 인터페이스의 Wake-on-LAN 지원 확인
      ansible.builtin.shell: |
        ethtool {{ target_interface }} | grep -i "wake-on"
      register: wol_support_check
      changed_when: false
      failed_when: false

    - name: Wake-on-LAN 지원 상태 출력
      ansible.builtin.debug:
        msg: |
          인터페이스 {{ target_interface }}의 Wake-on-LAN 지원 정보:
          {{ wol_support_check.stdout }}

    - name: Wake-on-LAN 설정 가능 여부 확인
      ansible.builtin.shell: |
        ethtool {{ target_interface }} | grep -i "supports wake-on"
      register: wol_capability_check
      changed_when: false
      failed_when: false

    - name: Wake-on-LAN 지원 여부 결과
      ansible.builtin.fail:
        msg: |
          ❌ 인터페이스 {{ target_interface }}는 Wake-on-LAN을 지원하지 않습니다.
          지원 정보: {{ wol_support_check.stdout }}

          Wake-on-LAN을 사용하려면 다음을 확인하세요:
          1. 네트워크 카드가 WOL을 지원하는지 확인
          2. BIOS/UEFI에서 WOL 설정이 활성화되어 있는지 확인
          3. 다른 네트워크 인터페이스를 사용할 수 있는지 확인
      when: wol_capability_check.rc != 0

    - name: Wake-on-LAN 지원 확인 완료
      ansible.builtin.debug:
        msg: "✅ 인터페이스 {{ target_interface }}는 Wake-on-LAN을 지원합니다! WOL 영구 설정을 진행합니다."
      when: wol_capability_check.rc == 0

    - name: WOL systemd service 파일 생성
      ansible.builtin.copy:
        dest: /etc/systemd/system/wol.service
        content: |
          [Unit]
          Description=Enable Wake-on-LAN
          After=network.target

          [Service]
          Type=oneshot
          ExecStart=/sbin/ethtool -s {{ target_interface }} wol g
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target
        mode: "0644"
      when: wol_capability_check.rc == 0

    - name: systemd daemon reload
      ansible.builtin.systemd:
        daemon_reload: yes
      when: wol_capability_check.rc == 0

    - name: wol.service 활성화 및 시작
      ansible.builtin.systemd:
        name: wol
        enabled: yes
        state: started
      when: wol_capability_check.rc == 0

    - name: WOL 설정 활성화 확인
      ansible.builtin.shell: |
        ethtool {{ target_interface }} | grep -E "^\s*Wake-on:" | awk '{print $2}'
      register: wol_final_check
      changed_when: false
      when: wol_capability_check.rc == 0

    - name: WOL 설정 값 검증
      ansible.builtin.fail:
        msg: |
          ❌ WOL 설정이 제대로 적용되지 않았습니다.
          현재 값: {{ wol_final_check.stdout }}
          기대 값: g
          
          문제 해결 방법:
          1. BIOS/UEFI에서 WOL 설정 확인
          2. 네트워크 어댑터 드라이버 확인
          3. 수동으로 실행: ethtool -s {{ target_interface }} wol g
      when: wol_capability_check.rc == 0 and wol_final_check.stdout.strip() != 'g'

    - name: WOL 설정 완료 결과
      ansible.builtin.debug:
        msg: |
          ✨ Wake-on-LAN 설정이 완료되었습니다!

          인터페이스: {{ target_interface }}
          WOL 설정: {{ wol_final_check.stdout }} (✅ 정상적용)

          ✅ systemd service 등록 완료
          ✅ 재부팅 시 WOL 자동 활성화

          사용법:
          - WOL 패킷 전송: wakeonlan {{ ansible_default_ipv4.macaddress }}
          - 서비스 상태 확인: systemctl status wol
      when: wol_capability_check.rc == 0 and wol_final_check.stdout.strip() == 'g'
