#!/usr/bin/env just --justfile

manifests-version := '1.10.2'

# 기본 변수 설정
_default:
    @just --list

# kserve (모듈 비활성화 - kserve 디렉토리 없음)
# mod kserve 'kserve'

download-manifests:
    curl -L -O https://github.com/kubeflow/manifests/archive/refs/tags/v{{manifests-version}}.zip
    unzip v{{manifests-version}}.zip
    cd manifests-{{manifests-version}}
    rm v{{manifests-version}}.zip

[working-directory: 'manifests-1.10.2']
install:
    # create namespace
    echo "Creating namespace..."
    kustomize build common/kubeflow-namespace/base | kubectl apply -f -

    # cert-manager
    echo "Installing cert-manager..."
    kustomize build common/cert-manager/base | kubectl apply -f -
    sleep 60
    kustomize build common/cert-manager/kubeflow-issuer/base | kubectl apply -f -
    echo "Waiting for cert-manager to be ready ..."
    kubectl wait --for=condition=Ready pod -l 'app in (cert-manager,webhook)' --timeout=180s -n cert-manager
    kubectl wait --for=jsonpath='{.subsets[0].addresses[0].targetRef.kind}'=Pod endpoints -l 'app in (cert-manager,webhook)' --timeout=180s -n cert-manager

    # Istio
    echo "Installing Istio CNI configured with external authorization..."
    kustomize build common/istio/istio-crds/base | kubectl apply -f -
    kustomize build common/istio/istio-namespace/base | kubectl apply -f -
    kustomize build common/istio/istio-install/overlays/oauth2-proxy | kubectl apply -f -
    echo "Waiting for all Istio Pods to become ready..."
    kubectl wait --for=condition=Ready pods --all -n istio-system --timeout 300s

    # knative
    echo "Installing Knative..."
    kustomize build common/knative/knative-serving/overlays/gateways | kubectl apply -f -
    kustomize build common/istio/cluster-local-gateway/base | kubectl apply -f -
    # 추론 요청 로깅
    # kustomize build common/knative/knative-eventing/base | kubectl apply -f -

    # Network Policies
    echo "Installing Network policies, Kubeflow roles, Istio resources"
    kustomize build common/networkpolicies/base | kubectl apply -f -
    kustomize build common/kubeflow-roles/base | kubectl apply -f -
    kustomize build common/istio/kubeflow-istio-resources/base | kubectl apply -f -

    ###
    # Application
    ###
    echo "Installing Kubeflow Pipelines..."
    kustomize build applications/pipeline/upstream/env/cert-manager/platform-agnostic-multi-user | kubectl apply -f -

    echo "Installing KServe..."
    kustomize build applications/kserve/kserve | kubectl apply --server-side --force-conflicts -f -
    kustomize build applications/kserve/models-web-app/overlays/kubeflow | kubectl apply -f -

    echo "Installing Dashboard..."
    kustomize build applications/centraldashboard/overlays/oauth2-proxy | kubectl apply -f -
    kustomize build applications/admission-webhook/upstream/overlays/cert-manager | kubectl apply -f -

    echo "Installing Jupyter Notebook..."
    kustomize build applications/jupyter/notebook-controller/upstream/overlays/kubeflow | kubectl apply -f -
    kustomize build applications/jupyter/jupyter-web-app/upstream/overlays/istio | kubectl apply -f -

    echo "Installing Volume management..."
    kustomize build applications/pvcviewer-controller/upstream/base | kubectl apply -f -
    kustomize build applications/volumes-web-app/upstream/overlays/istio | kubectl apply -f -

    echo "Installing Profiles..."
    kustomize build applications/profiles/upstream/overlays/kubeflow | kubectl apply -f -

    echo "Creating user namespace..."
    kustomize build common/user-namespace/base | kubectl apply -f -

    echo "Installation complete! 🎉"
    echo "Access dashboard: kubectl port-forward -n istio-system svc/istio-ingressgateway 8080:80"
