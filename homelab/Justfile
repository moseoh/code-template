#!/usr/bin/env just --justfile

# Homelab 전체 워크플로우 관리
# 사용법: just <command>

# 도움말 표시
default:
    @just --list

# ============================================================
# 기능별 워크플로우 (추천)
# ============================================================

# 🏠 전체 홈랩 환경 구축 (순차 실행)
[group('워크플로우')]
setup-all: setup-base setup-storage setup-k3s setup-monitoring
    @echo "🎉 전체 홈랩 환경 구축 완료!"
    @echo ""
    @echo "다음 명령어로 상태를 확인하세요:"
    @echo "  just status-all"

# 🐧 기본 서버 설정 (Ubuntu + WakeOnLAN)
[group('워크플로우')]
setup-base:
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    @echo "🐧 기본 서버 설정 시작..."
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    cd ansible && just run-ubuntu-setup
    cd ansible && just run-wakeonlan
    @echo "✅ 기본 서버 설정 완료!"

# 📁 스토리지 설정 (NFS Server + Provisioner)
[group('워크플로우')]
setup-storage:
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    @echo "📁 스토리지 설정 시작..."
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    cd ansible && just run-nfs-server
    @echo "⏳ NFS 서버 시작 대기 (10초)..."
    sleep 10
    cd kubernetes && just install-nfs
    @echo "✅ 스토리지 설정 완료!"

# ☸️  K3s 클러스터 설치
[group('워크플로우')]
setup-k3s:
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    @echo "☸️  K3s 클러스터 설치 시작..."
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    cd ansible && just run-k3s
    @echo "⏳ K3s 클러스터 시작 대기 (30초)..."
    sleep 30
    @echo "✅ K3s 클러스터 설치 완료!"

# 📊 모니터링 설정 (SigNoz)
[group('워크플로우')]
setup-monitoring:
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    @echo "📊 모니터링 설정 시작..."
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    cd kubernetes && just install-signoz
    @echo "✅ 모니터링 설정 완료!"

# 🤖 Kubeflow 설치
[group('워크플로우')]
setup-kubeflow:
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    @echo "🤖 Kubeflow 설치 시작..."
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    cd kubernetes && just install-kubeflow
    @echo "✅ Kubeflow 설치 완료!"

# ⚡ n8n 워크플로우 자동화 설치
[group('워크플로우')]
setup-n8n:
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    @echo "⚡ n8n 설치 시작..."
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    cd kubernetes && just install-n8n
    @echo "✅ n8n 설치 완료!"

# ============================================================
# 상태 확인
# ============================================================

# 전체 시스템 상태 확인
[group('상태확인')]
status-all:
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    @echo "📊 전체 시스템 상태"
    @echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
    @echo ""
    @echo "=== Ansible 연결 테스트 ==="
    cd ansible && just ping || echo "❌ Ansible 연결 실패"
    @echo ""
    @echo "=== Kubernetes 클러스터 ==="
    kubectl cluster-info || echo "❌ K3s 클러스터 연결 실패"
    @echo ""
    cd kubernetes && just status-all

# Ansible 서버 연결 테스트
[group('상태확인')]
ping:
    cd ansible && just ping

# Kubernetes 리소스 상태
[group('상태확인')]
k8s-status:
    cd kubernetes && just status-all

# Helm releases 상태
[group('상태확인')]
helm-status:
    cd kubernetes && just helm-list

# ============================================================
# 하위 모듈 접근
# ============================================================

# Ansible 세부 작업
mod ansible 'ansible'

# Kubernetes 세부 작업
mod kubernetes 'kubernetes'

# ============================================================
# 유틸리티
# ============================================================

# Vault 패스워드 생성 (최초 1회)
[group('유틸리티')]
init-vault:
    @echo "🔐 Vault 패스워드 초기화..."
    cd ansible && just vault-create-pass

# Vault 편집
[group('유틸리티')]
vault-edit:
    cd ansible && just vault-edit

# Vault 확인
[group('유틸리티')]
vault-view:
    cd ansible && just vault-view

# 프로젝트 구조 확인
[group('유틸리티')]
tree:
    @echo "📁 프로젝트 구조"
    @echo ""
    @echo "homelab/"
    @echo "├── ansible/              # Ansible playbooks"
    @echo "│   ├── playbooks/"
    @echo "│   │   ├── server/       # Ubuntu Server 관련"
    @echo "│   │   ├── kubernetes/   # K8s 클러스터 설정"
    @echo "│   │   └── common/       # 공통 (알림 등)"
    @echo "│   └── Justfile         # Ansible 세부 작업"
    @echo "└── kubernetes/           # Kubernetes 리소스"
    @echo "    ├── infrastructure/   # 인프라 (NFS 등)"
    @echo "    ├── applications/     # 애플리케이션"
    @echo "    └── Justfile         # K8s 세부 작업"
